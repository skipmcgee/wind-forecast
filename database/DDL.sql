-- Data Definition Language
-- 4/28/2024
-- MySQL Script generated by MySQL Workbench and modified by David McGee, Kurt Griessman, and Theodore Norred
-- CS-340 Group 10 Project

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
SET AUTOCOMMIT = 0;

-- -------------------------
-- Table Creation Queries --
-- -------------------------

-- -----------------------------------------------------
-- Table `Models`
-- ------
-- PK: modelID
-- FK: None
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Models` ;

CREATE TABLE IF NOT EXISTS `Models` (
  `modelID` INT NOT NULL,
  `modelName` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`modelID`),
  UNIQUE INDEX `modelID_UNIQUE` (`modelID` ASC) VISIBLE)
COMMENT = 'These are the individual weather models that the Model-Managers product supports.';


-- -----------------------------------------------------
-- Table `Locations`
-- ------
-- PK: locationID
-- FK: None
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Locations` ;

CREATE TABLE IF NOT EXISTS `Locations` (
  `locationID` INT NOT NULL AUTO_INCREMENT,
  `locationName` VARCHAR(100) NOT NULL,
  `locationLatitude` FLOAT NOT NULL,
  `locationLongitude` FLOAT NOT NULL,
  `locationAltitude` INT NOT NULL,
  PRIMARY KEY (`locationID`),
  UNIQUE INDEX `locationName_UNIQUE` (`locationName` ASC) VISIBLE)
COMMENT = 'The locations where customers desire to compare forecasts to measured values.';


-- -----------------------------------------------------
-- Table `Dates`
-- ------
-- PK: dateID
-- FK: None
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Dates` ;

CREATE TABLE IF NOT EXISTS `Dates` (
  `dateID` INT NOT NULL AUTO_INCREMENT,
  `dateDateTime` DATETIME NOT NULL,
  PRIMARY KEY (`dateID`),
  INDEX `dateDateTime_UNIQUE` (`dateDateTime` ASC) VISIBLE)
COMMENT = 'Date information in DateTime.';

-- -----------------------------------------------------
-- Table `Forecasts`
-- ------
-- PK: forecastID
-- FK: forecastModelID, forecastLocationID, forecastDateID
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Forecasts` ;

CREATE TABLE IF NOT EXISTS `Forecasts` (
  `forecastID` INT NOT NULL AUTO_INCREMENT,
  `forecastDateID` INT,
  `forecastTemperature2m` FLOAT NOT NULL,
  `forecastPrecipitation` FLOAT NOT NULL,
  `forecastWeatherCode` FLOAT NOT NULL,
  `forecastPressureMSL` INT NOT NULL,
  `forecastWindSpeed10m` FLOAT NOT NULL,
  `forecastWindDirection10m` FLOAT NOT NULL,
  `forecastCape` FLOAT NOT NULL,
  `forecastModelID` INT,
  `forecastLocationID` INT NOT NULL,
  `forecastForDateTime` DATETIME NOT NULL,
  PRIMARY KEY (`forecastID`),
  INDEX `fk_Forecasts_Models_idx` (`forecastModelID` ASC) VISIBLE,
  INDEX `fk_Forecasts_Locations1_idx` (`forecastLocationID` ASC) VISIBLE,
  INDEX `fk_Forecasts_Dates1_idx` (`forecastDateID` ASC) VISIBLE,
  CONSTRAINT `fk_Forecasts_Models`
    FOREIGN KEY (`forecastModelID`)
    REFERENCES `Models` (`modelID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Forecasts_Locations1`
    FOREIGN KEY (`forecastLocationID`)
    REFERENCES `Locations` (`locationID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Forecasts_Dates1`
    FOREIGN KEY (`forecastDateID`)
    REFERENCES `Dates` (`dateID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
COMMENT = 'Forecast information that uses attributes that are common across all weather models.\n';


-- -----------------------------------------------------
-- Table `Sensors`
-- ------
-- PK: sensorID
-- FK: sensorLocationID
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Sensors` ;

CREATE TABLE IF NOT EXISTS `Sensors` (
  `sensorID` INT NOT NULL AUTO_INCREMENT,
  `sensorName` VARCHAR(100) NOT NULL,
  `sensorAPIKey` VARCHAR(100) NOT NULL,
  `sensorNumber` INT NOT NULL DEFAULT 1151,
  `sensorLocationID` INT,
  PRIMARY KEY (`sensorID`),
  UNIQUE INDEX `sensorNumber_UNIQUE` (`sensorNumber` ASC) VISIBLE,
  INDEX `fk_Sensors_Locations1_idx` (`sensorLocationID` ASC) VISIBLE,
  CONSTRAINT `fk_Sensors_Locations1`
    FOREIGN KEY (`sensorLocationID`)
    REFERENCES `Locations` (`locationID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
COMMENT = 'The sensors that can measure the weather data at a specific location.';


-- -----------------------------------------------------
-- Table `Readings`
-- ------
-- PK: readingID
-- FK: readingSensorID, readingDateID
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Readings` ;

CREATE TABLE IF NOT EXISTS `Readings` (
  `readingID` INT NOT NULL AUTO_INCREMENT,
  `readingSensorID` INT,
  `readingWindSpeed` FLOAT NOT NULL,
  `readingWindGust` FLOAT NOT NULL,
  `readingWindMin` FLOAT NOT NULL,
  `readingWindDirection` INT NOT NULL,
  `readingTemperature` FLOAT NOT NULL,
  `readingDateID` INT,
  PRIMARY KEY (`readingID`),
  INDEX `fk_Readings_Sensors1_idx` (`readingSensorID` ASC) VISIBLE,
  INDEX `fk_Readings_Dates1_idx` (`readingDateID` ASC) VISIBLE,
  CONSTRAINT `fk_Readings_Sensors1`
    FOREIGN KEY (`readingSensorID`)
    REFERENCES `Sensors` (`sensorID`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Readings_Dates1`
    FOREIGN KEY (`readingDateID`)
    REFERENCES `Dates` (`dateID`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
COMMENT = 'The actual measured sensor reading values.';


-- --------------------
-- Insertion Queries --
-- --------------------


-- -----------------------------------------------------
-- Insert `Models`
-- -----------------------------------------------------

INSERT
	INTO
	`Models` (modelID, modelName)
VALUES 
	(1, 'ECMWF'),
	(2, 'GFS');

-- -----------------------------------------------------
-- Insert `Locations`
-- -----------------------------------------------------

INSERT INTO 
	`Locations` (locationName, locationLatitude, locationLongitude, locationAltitude)
VALUES 
	('La Bajada Ridge Launch', 35.56195, -106.22596, 6135),
	('Sandia Peak Launch', 35.196576, -106.434662, 10275),
	('Sandia Crest Launch', 35.21342, -106.45026, 10600),
	('Blue Springs Launch', 34.44002, -106.51913, 6200);

-- -----------------------------------------------------
-- Insert `Sensors`
-- -----------------------------------------------------

INSERT INTO 
	`Sensors` (sensorName, sensorLocationID, sensorAPIKey, sensorNumber)
VALUES 
	('La Bajada Holfuy', 1, 'mytestapikey1234', 1151),
	('Sandia Soaring Peak Tempest', 2, 'mytestapikey23456', 134520);

-- -----------------------------------------------------
-- Insert `Dates`
-- -----------------------------------------------------

INSERT INTO 
	`Dates` (dateDateTime)
VALUES 
	('2024-04-01 08:00:00'),
	('2024-04-01 09:00:00'),
	('2024-04-01 10:00:00'),
	('2024-04-01 11:00:00'),
	('2024-04-01 12:00:00'),
	('2024-04-01 13:00:00'),
	('2024-04-01 14:00:00'),
	('2024-04-01 15:00:00'),
	('2024-04-01 16:00:00'),
	('2024-04-01 17:00:00'),
	('2024-04-01 18:00:00'),
	('2024-04-01 19:00:00'),
	('2024-04-01 20:00:00'),
	('2024-04-01 21:00:00');

-- -----------------------------------------------------
-- Insert `Readings`
-- -----------------------------------------------------
INSERT INTO 
	`Readings` (readingSensorID, readingDateID, readingWindSpeed, readingWindGust, readingWindMin, readingWindDirection, readingTemperature)
VALUES 
	(1, 1, 22.0, 28.0, 14.0, 250, 64),
	(1, 1, 22.0, 28.0, 14.0, 250, 64),
	(1, 2, 20.0, 22.0, 6.0, 231, 66),
	(1, 3, 21.0, 24.0, 11.0, 242, 67),
	(1, 4, 23.0, 25.0, 8.0, 250, 69),
	(1, 5, 18.0, 21.0, 4.0, 256, 71),
	(1, 6, 17.0, 22.0, 12.0, 264, 74),
	(1, 7, 16.0, 20.0, 15.0, 270, 72),
	(1, 8, 18.0, 21.0, 18.0, 265, 77),
	(1, 9, 20.0, 24.0, 16.0, 254, 75),
	(1, 10, 19.0, 22.0, 17.0, 246, 74);

-- -----------------------------------------------------
-- Insert `Forecasts`
-- -----------------------------------------------------
INSERT INTO 
	`Forecasts` (forecastForDateTime, forecastDateID, forecastTemperature2m, forecastPrecipitation, forecastWeatherCode, forecastPressureMSL, forecastWindSpeed10m, forecastWindDirection10m, forecastCape, forecastLocationID, forecastModelID)
VALUES 
	('2024-04-01 15:00:00', 1, 58, 0, '0.0', 3, 10.0, 220.0, 3.5, 1, 1),
	('2024-04-01 16:00:00', 2, 58, 0, '0.0', 3, 10.0, 220.0, 4.1, 1, 1),
	('2024-04-01 17:00:00', 3, 62, 0, '0.0', 4, 14.0, 230.0, 4.2, 1, 1),
	('2024-04-01 18:00:00', 4, 64, 0, '0.0', 4, 16.0, 232.0, 3.6, 1, 1),
	('2024-04-01 19:00:00', 5, 66, 0, '0.0', 4, 13.0, 228.0, 3.4, 1, 1),
	('2024-04-01 20:00:00', 6, 62, 0, '0.0', 4, 11.0, 220.0, 3.3, 1, 1),
	('2024-04-01 21:00:00', 7, 58, 0, '0.0', 3, 9.0, 218.0, 3.1, 1, 1);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

SET FOREIGN_KEY_CHECKS=1;
COMMIT;
